<% @page_title = "New Submission: #{@assignment.name}" %>

<% if @submission.errors.any? %>
<div id="error_explanation" class="alert alert-danger">
  <h2><%= pluralize(@submission.errors.count, "error") %> prohibited
  this submission from being saved:</h2>

  <ul>
    <% @submission.errors.full_messages.each do |msg| %>
    <li><%= msg %></li>
    <% end %>
  </ul>
</div>
<% end %>


<%= form_for [@course, @assignment.becomes(Assignment), @submission.becomes(Submission)] do |f| %>
  <% f.object = @submission.becomes(@submission.class) %>
  <%= f.hidden_field :type, value: "FilesSub" %>
  <%= render "new_common", f: f, type: {noun: "submission", verb: "submit", gerund: "submitting" },
      container_style: "col-md-12" do %>

<% if !@submission_prohibited || @staff_override %>
<% if @assignment.request_time_taken %>
<div class="form-group">
  <%= f.label :time_taken, "How many hours have you worked on this assignment?" %>
  <%= f.spinner :time_taken, @submission.time_taken || "", :min => 0, :delta => 0.5 %>
</div>
<script>
  $(function() { $(".spinner").each(function() { activateSpinner(this, {precision: 1}) }); })
</script>
<% end %>
<div class="form-group">
  <%= f.label :student_notes %>
  <%= f.text_area :student_notes, class: 'form-control' %>
</div>
<div class="form-group">
  <%= f.label :upload_file %>
  <div class="hidden alert alert-warning" id="archive-warning">
    <p class="archive-only text-danger"><b>Your selected file is in an unsupported archive format.</b></p>
    <p>If your homework requires submitting multiple files:</p>
    <ul>
      <li class="archive-only text-danger bg-danger">Please archive them and submit either
        a <code>.zip</code>, a <code>.tar</code>,
        a <code>.tar.gz</code> or a <code>.tgz</code> file.</li>
      <li class="archive-only text-danger bg-danger">Other archive formats
        (e.g. <code>.rar</code>, <code>.jar</code>,
        <code>7z</code> and others) are <i><b>not</b></i> supported,
        and will not be extracted.</li>
      <li>Your archive may be no larger than
        <b><%= @course.sub_max_size %>MB</b>, may contain no more than
        <b><%= ArchiveUtils.MAX_FILES %> files and directories (total)</b>,
        and may be no larger than
        <b><%= ArchiveUtils.MAX_SIZE / 1.megabyte %>MB</b>
        when extracted.</li>
      <li>Please check that the directory structure of your submission
        matches any requirements specified by the assignment.</li>
      <li>Make sure that your archive is <i><b>not</b></i>
        password-protected; the server cannot guess your
        password.</li>
    </ul>
  </div>
  <%= f.file_field :upload_file %>
</div>
<div class="form-group">
  <div id="late-warning">
    <h3 class="hidden" style="margin-top: initial;">Warning!</h3>
    <p class="hidden">It is now past the due date and time for this
      assignment, and your submission will be considered late.  Are you
      sure you want to submit?</p>
    <p><%= f.submit "Submit files", class: "btn btn-primary" %></p>
  </div>
</div>
<script>
  var deadline = moment(Date.parse("<%= @assignment.effective_due_date(current_user, @team).strftime("%Y/%m/%d %H:%M") %>")).valueOf();
  var now = moment().valueOf();
  setTimeout(function() {
    var warning = $("#late-warning");
    warning.addClass("alert alert-danger");
    warning.find("p").removeClass("hidden");
    warning.find("h3").removeClass("hidden");
  }, Math.max(deadline - now, 0));
  var archiveExtensions = <%= raw json_escape(JSON.generate(ArchiveUtils.ARCHIVE_EXTENSIONS)) %>;
  $("#submission_upload_file").change(function(e) {
    var filename = $(this).val();
    var ext = filename.split('.').pop().toLowerCase();
    if (archiveExtensions[ext] === false) {
      $("#archive-warning").removeClass("hidden");
      $("#archive-warning .archive-only").removeClass("hidden");
    } else if (archiveExtensions[ext] === true) {
      $("#archive-warning").removeClass("hidden");
      $("#archive-warning .archive-only").addClass("hidden");
    } else {
      $("#archive-warning").addClass("hidden");
    }
  });
  $("form").on("submit", function(e) {
    var num = ensureValidNumericInputOnSubmit(e, "span.spinner > input");
    var files = ensureFilesPresentOnSubmit(e);
    return num && files;
  });
</script>
<% end %>
<% end %>
<% end %>
